#Descomposición clásica
#Se utiliza la función descompose
#Otro tipo de descomposición de la estacionariedad, tendencia y estacionariedad
#es la descomposición por Loess la cual esta basada en un algoritmo
#que permite descomponer las series de tiempo en 3 elementos:
#estacionariedad, tendencia y aleatoriedad, una de las ventajas de esta
#descomposición es el calculo de la estacionariedad que se obtienen valores
#de estacionariedad no constantes, en contraste con el metodo clasico de descomposición

desocupacion<-read.csv("C:\\Users\\Sala-D2\\Downloads\\tarea2.csv")
class(desocupacion)
des<-ts(desocupacion[1:48,1], frequency=4, start=2005)
class(des)
desco<-decompose(des)
tend1<-desco$trend
plot(tend1, col="purple", main="Tendencia desocupación", ylab="tasas", xlab="años")
lines(tend2, col="gray")
###Descomposición tendencia, estacional por Loose
#se utiliza la función stl()
#-> para descomponer por Loose utilizamos
desco2<-stl(des, s.window="periodic", robust=T)
tend2<-desco2$time.series[,2]
esta2<-desco2$time.series[,1]

pib<-read.csv("C:\\Users\\Sala-D2\\Documents\\PIB.csv")
class(pib)
pibts<-ts(pib[1:36,1], frequency=3, start=2007)
class(pibts)
descom<-decompose(pibts)
tendpib<-descom$trend
plot(tendpib, col="purple", main="Tendencia PIB", ylab="tasas", xlab="años")

###Descomposición tendencia estacional por Loose
descom2<-stl(pibts, s.window="periodic", robust=T)
tendencia2<-descom2$time.series[,2]
estacional2<-descom2$time.series[,1]

install.packages("fpp")
require(fpp)
ajus<-seasadj(desco2) #ajustamos estacionariedad
inge1<-naive(ajus, h=5)
plot(inge1)
